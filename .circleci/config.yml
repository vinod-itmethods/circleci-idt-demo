version: 2.1

orbs:
  snyk: snyk/snyk@1.5.0
  slack: circleci/slack@4.12.5
  aws-cli: circleci/aws-cli@4.0.0

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      - run:
          name: Run Unit Tests
          command: pytest test_app.py

    sonar-scan:
      machine: true
      resource_class: itmethods/mac
      steps:
        - checkout

        - run:
            name: Install SonarScanner CLI
            command: |
              curl -L -o sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-macosx.zip
              unzip -o sonar-scanner.zip -d $HOME

        - run:
            name: Run SonarQube Scan with Java 17
            command: |
              export JAVA_HOME=$(/usr/libexec/java_home -v17)
              export PATH="$JAVA_HOME/bin:$PATH"
              echo "✅ Java version:"
              java -version

              # Find the SonarScanner JAR
              SCANNER_JAR=$(find $HOME/sonar-scanner-* -name "sonar-scanner-cli-*.jar" | head -n 1)

              # Run SonarQube scan using injected token and property file
              $JAVA_HOME/bin/java \
                -jar "$SCANNER_JAR" \
                -Dproject.settings=sonar-project.properties \
                -Dsonar.token=$SONAR_TOKEN




  snyk-scan:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Install Python Dependencies
          command: pip install -r requirements.txt
      - snyk/scan:
          command: "--file=requirements.txt --package-manager=pip"

  deploy:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - aws-cli/setup
      - run:
          name: Upload to S3
          command: |
            zip -r app.zip app.py
            echo "Deploying to: s3://$S3_BUCKET_NAME/app.zip"
            aws s3 cp app.zip s3://$S3_BUCKET_NAME/app.zip

  notify:
    docker:
      - image: cimg/base:stable
    steps:
      - slack/notify:
          event: always
          template: basic_success_1
          custom: |
            {
              "text": "✅ Demo complete: All steps executed in IDT pipeline."
            }
          continue-on-error: true

workflows:
  build-deploy:
    jobs:
      - build-and-test
      - sonar-scan:
          requires:
            - build-and-test
      - snyk-scan:
          requires:
            - sonar-scan
      - deploy:
          requires:
            - snyk-scan
      # - notify:
      #     requires:
      #       - deploy
