version: 2.1

orbs:
  python: circleci/python@1.5.0
  node: circleci/node@5.0.0

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          packages: pytest
      - run:
          name: Run unit tests
          command: pytest test_app.py

  sonar-scan:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Install SonarScanner
          command: |
            curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
            unzip sonar-scanner.zip -d $HOME
            export PATH="$HOME/sonar-scanner-4.8.0.2856-linux/bin:$PATH"
      # - run:
      #     name: Run SonarQube Scan
      #     command: |
      #       export PATH="$HOME/sonar-scanner-4.8.0.2856-linux/bin:$PATH"
      #       sonar-scanner \
      #         -Dsonar.projectKey=idt-demo \
      #         -Dsonar.sources=. \
      #         -Dsonar.host.url=$SONAR_HOST_URL \
      #         -Dsonar.login=$SONAR_TOKEN

  deploy:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update
            sudo apt-get install -y awscli
      - run:
          name: Configure AWS credentials
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set region $AWS_REGION
      - run:
          name: Upload to S3
          command: |
            aws s3 cp app.py s3://$S3_BUCKET_NAME/ --region $AWS_REGION

  notify:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Slack Notification (placeholder)
          command: echo "âœ… Build and Deploy completed!"  # Replace with Slack webhook if needed

workflows:
  build-deploy:
    jobs:
      - build-and-test
      - sonar-scan:
          requires:
            - build-and-test
      - deploy:
          requires:
            - sonar-scan
      - notify:
          requires:
            - deploy
